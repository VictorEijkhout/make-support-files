# -*- makefile -*-

.PHONY: info moreinfo
info :: 
	@echo && echo "================ General info" 
	@echo "(make moreinfo for options)" && echo 
	@echo "make targets for ${PACKAGE}"
	@if [ -z "${MAKEINCLUDES}" ] ; then \
	    echo "Set MAKEINCLUDES to location of Make.stuff files" \
	     && return 1 \
	 ; fi
	@source ${MAKEINCLUDES}/names.sh \
	 && export MODE=${MODE} \
	 && setnames "${PACKAGEROOT}" "${PACKAGE}" "${PACKAGEVERSION}" "${INSTALLEXT}" "${PACKAGEBASENAME}" \
	 && if [ ! -d "$$srcdir" ] ; then \
	        echo "  source : $$srcdir (missing)" \
	    ; else \
	        echo "  source : $$srcdir" \
	    ; fi \
	 && if [ ! -z "${PREFIXEXTRA}" ] ; then \
	        installdir=$${installdir}-${PREFIXEXTRA} ; fi \
	 && echo "  install: $$installdir" \
	 && echo "  module dir: $$moduledir" \
	 && echo "    make list_installations for already present"
.PHONY: list_installations
list_installations ::
	@source ${MAKEINCLUDES}/names.sh \
	 && export MODE=${MODE} \
	 && setnames "${PACKAGEROOT}" "${PACKAGE}" "${PACKAGEVERSION}" "${INSTALLEXT}" "${PACKAGEBASENAME}" \
	 && echo && echo "Already available installations in $${homedir}:" \
	 && ls -d $${homedir}/installation* 2>/dev/null || echo >/dev/null \
	 && make --no-print-directory moduleprint \
	 && echo

.PHONY: homedir
homedir :
	@if [ -z "${MAKEINCLUDES}" ] ; then \
	    echo "Set MAKEINCLUDES to location of Make.stuff files" \
	     && return 1 \
	 ; fi
	@source ${MAKEINCLUDES}/names.sh \
	 && setnames "${PACKAGEROOT}" "${PACKAGE}" "${PACKAGEVERSION}" "${INSTALLEXT}" "${PACKAGEBASENAME}" \
	 && if [ ! -d "$$homedir" ] ; then \
	    echo "First creating home dir for ${PACKAGE}" \
	     && mkdir -p "$$homedir" \
	    ; \
	fi

.PHONY: modules moduleprint
modules ::
	@for m in ${MODULES} ; do \
	    M=`echo $$m | tr a-z A-Z` && lmd=LMOD_$${M}_DIR && tmd=TACC_$${M}_DIR \
	     && vt=`env | grep $${tmd} | cut -d = -f 2` \
	     && vl=`env | grep $${lmd} | cut -d = -f 2` \
	     && if [ -z "$${vl}" -a -z "$${vt}" ] ; then \
	            echo "Please load module: $$m (from: ${MODULES})" && exit 1 \
	        ; fi \
	 ; done
moduleprint ::
	@if [ ! -z "${MODULES}" ] ; then \
	    echo && echo "Loaded prereq modules:" \
	     && for m in ${MODULES} ; do \
	            module list $$m 2>&1 \
	            | grep -v Matching | awk 'NF>0 {print}' \
	         ; done \
	 ; fi

.PHONY: ls findfile findstring installext
info ::
	@echo "    make ls [ LSPATH=.... relative to src ] [ PATTERN=... ( ls in src dir ) ]"
	@echo "    make findfile   FILE=..."
	@echo "    make findstring STRING=..."
	@echo "    make installext"
ls :
	@source ${MAKEINCLUDES}/names.sh \
	 && export MODE=${MODE} \
	 && setnames "${PACKAGEROOT}" "${PACKAGE}" "${PACKAGEVERSION}" "${INSTALLEXT}" "${PACKAGEBASENAME}" \
	 && echo "$${srcdir}/${LSPATH}:" \
	 && ls $${srcdir}/${LSPATH}/${PATTERN}
findfile :
	@source ${MAKEINCLUDES}/names.sh \
	 && export MODE=${MODE} \
	 && setnames "${PACKAGEROOT}" "${PACKAGE}" "${PACKAGEVERSION}" "${INSTALLEXT}" "${PACKAGEBASENAME}" \
	 && find $$homedir -name \*${FILE}\*
findstring :
	@source ${MAKEINCLUDES}/names.sh \
	 && export MODE=${MODE} \
	 && setnames "${PACKAGEROOT}" "${PACKAGE}" "${PACKAGEVERSION}" "${INSTALLEXT}" "${PACKAGEBASENAME}" \
	 && find $$homedir -type f -exec grep -i "${STRING}" {} \; -print
installext :
	@source ${MAKEINCLUDES}/names.sh \
	 && export MODE=${MODE} \
	 && setnames "${PACKAGEROOT}" "${PACKAGE}" "${PACKAGEVERSION}" "${INSTALLEXT}" "${PACKAGEBASENAME}" \
	 && echo $$installext

.PHONY: clean
clean ::
	@rm -f *.log *~
