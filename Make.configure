# -*- makefile -*-
.PHONY: conf_info
conf_info :
	@echo "================ autotools configure:"
	@echo "make configure config-help config-log"
info :: conf_info
moreinfo :: conf_info
	@echo "    [ CONFIGUREFLAGS=... ]"
	@echo "    [ ECHO=0/1 ]"
	@echo "    [ PREFIXEXTRA=... for attaching to prefix ]"
	@echo "    [ PKG_CONFIG_PATHS / PKG_CONFIG_ADDS = .... ]"
.PHONY: configure config-help
configure :: modules
	@export MODE=${MODE} \
	 && source ${MAKEINCLUDES}/names.sh \
	 && installext=$$( make --no-print-directory installext \
	        PACKAGEVERSION=${PACKAGEVERSION} MODE=${MODE} \
	        INSTALLEXT=${INSTALLEXT} INSTALLVARIANT=${INSTALLVARIANT} \
	        ) \
	 && requirenonzero installext \
	 && lognames $$installext \
	 && requirenonzero configurelog \
	 && if [ ! -z "${PREFIXOPTION}" ] ; then \
	      export prefixoption=${PREFIXOPTION} \
	    ; else export prefixoption=--prefix ; fi \
	  && ( \
	    echo "Start autotools-based configuration, started $$(date)" \
	     && export srcdir=$$( make --no-print-directory srcdir \
	            PACKAGE=${PACKAGE} PACKAGEVERSION=${PACKAGEVERSION} \
	            PACKAGEBASENAME=${PACKAGEBASENAME} \
	            DOWNLOADPATH=${DOWNLOADPATH} SRCPATH=${SRCPATH} \
	            ) \
	     && reportnonzero srcdir \
	     && export builddir=$$( make --no-print-directory builddir \
	            PACKAGE=${PACKAGE} PACKAGEVERSION=${PACKAGEVERSION} \
	            PACKAGEBASENAME=${PACKAGEBASENAME} MODE=${MODE} \
	            HOMEDIR=${HOMEDIR} BUILDDIRROOT=${BUILDDIRROOT} \
	            INSTALLEXT=${INSTALLEXT} INSTALLVARIANT=${INSTALLVARIANT} \
	            ) \
	     && reportnonzero builddir \
	     && export prefixdir=$$( make --no-print-directory prefixdir \
	            PACKAGE=${PACKAGE} PACKAGEVERSION=${PACKAGEVERSION} \
	            PACKAGEBASENAME=${PACKAGEBASENAME} MODE=${MODE} \
	            INSTALLPATH=${INSTALLPATH} INSTALLROOT=${INSTALLROOT} \
	            INSTALLEXT=${INSTALLEXT} INSTALLVARIANT=${INSTALLVARIANT} \
	            ) \
	     && reportnonzero prefixdir \
	     && if [ ! -z "${PREFIXEXTRA}" ] ; then \
	            echo "prefix: attaching PREFIXEXTRA=${PREFIXEXTRA}" \
	             && prefixdir=$${prefixdir}-${PREFIXEXTRA} ; fi \
	     \
	     && source ${MAKEINCLUDES}/compilers.sh \
	     && if [ "${MODE}" = "mpi" -o "${MODE}" = "hybrid" ] ; then \
	            setmpicompilers ; else setcompilers ; fi \
	     && reportcompilers \
	     \
	     && requirenonzero srcdir \
	     && cd $$srcdir \
	     && if [ ! -z "${BEFORECONFIGURECMDS}" ] ; then \
	            echo " .. before configure: <<${BEFORECONFIGURECMDS}>>" \
	             && eval ${BEFORECONFIGURECMDS} \
	        ; fi \
	     && if [ ! -z "${DEFUNPROGFC}" ] ; then \
	          echo " .. patch configure.ac" \
	           && sed -i configure.ac \
	                -e '/AC_INIT/aAC_DEFUN([_AC_PROG_FC_V],[])' \
	        ; fi \
	     && if [ ! -f "configure" -a -f autogen.sh ] ; then \
	            echo "First autogen" \
	             && ./autogen.sh ; fi \
	     && if [ ! -f "configure" -o ! -z "${FORCERECONF}" ] ; then \
	          if [ -f configure.ac ] ; then \
	            echo " .. auto reconf" \
	             && if [ ! -z "${AUTORECONF}" ] ; then \
	                  cmdline="${AUTORECONF} -i" \
	                ; else \
	                  cmdline="aclocal \
	                   && $$( if [ ! -z ${AUTOCONF} ] ; then echo ${AUTOCONF} ; else echo autoconf ; fi )" \
	                ; fi \
	             && echo " .. auto conf/reconf: $$cmdline" \
	             && eval $$cmdline \
	          ; else \
	            echo "ERROR missing configure.ac" && exit 1 \
	          ; fi \
	        ; fi \
	     \
	     && if [ ! -z "${CONFIGINBUILDDIR}" ] ; then \
	          echo " .. configure in build dir" \
	           && cd "$${builddir}" \
	        ; elif [ ! -z "${CONFIGURESUBDIR}" ] ; then \
	          echo " .. configure in subdir: ${CONFIGURESUBDIR}" \
	           && cd "${CONFIGURESUBDIR}" \
	        ; fi \
	     && echo " .. configuring in $$(pwd)" \
	     && if [ ! -z "${CFLAGS}" ] ; then \
	            export CFLAGS="${CFLAGS}" ; fi \
	     && if [ ! -z "${CXXFLAGS}" ] ; then \
	            export CXXFLAGS="${CXXFLAGS}" ; fi \
	     && if [ ! -z "${BLAS_LIBS}" ] ; then \
	            export BLAS_LIBS="${BLAS_LIBS}" ; fi \
	     && if [ ! -z "${LIBS}" ] ; then \
	            export LIBS="${LIBS}" ; fi \
	     && if [ ! -z "${CONFIGURE_SOURCE_THIS}" ] ; then \
	            echo "Sourcing: ${CONFIGURE_SOURCE_THIS}" \
	             && source ${CONFIGURE_SOURCE_THIS} ; fi \
	     && notetoself "libdir should not be needed" \
	     && if [ -f Makefile ] ; then \
	            echo " .. distcleaning" \
	             && ( make distclean || echo "no distclean rule" ) ; fi \
	     && for e in ${CONFIGUREENV} ; do \
	          echo "set environment: $$e" && eval "export $$e" \
	        ; done \
	     && if [ -z "${CONFIGINBUILDDIR}" ] ; then \
	          configureline="./configure" \
	        ; else \
	          configureline="$${srcdir}/configure" \
	        ; fi \
	     && configureline="\
	            $${configureline} \
	                $${prefixoption}=$$prefixdir --libdir=$${prefixdir}/lib \
	                ${CONFIGUREFLAGS} \
	            " \
	     && echo "Configuring as:" && echo $$configureline \
	     && echo " .. with CC=$${CC} CXX=$${CXX} FC=$${FC}" \
	     && if [ ! -z "$${CFLAGS}$${CXXFLAGS}$${FFLAGS}" ] ; then \
	            echo " .. and CFLAGS=$${CFLAGS}" ; fi \
	     && if [ ! -z "$${LIBS}" ] ; then \
	            echo " .. and  LIBS=$${LIBS}" ; fi \
	     && eval $$configureline \
	    ) 2>&1 | tee $$configurelog \
	 && echo && echo "See $$configurelog" \

config-help :
	@( \
	source ${MAKEINCLUDES}/names.sh \
	 && export srcdir=$$( make --no-print-directory srcdir \
	        PACKAGE=${PACKAGE} PACKAGEVERSION=${PACKAGEVERSION} \
	        PACKAGEBASENAME=${PACKAGEBASENAME} \
	        DOWNLOADPATH=${DOWNLOADPATH} SRCPATH=${SRCPATH} \
	        ) \
	 && reportnonzero srcdir \
	 && cd $$srcdir \
	 && ./configure --help \
	) 

config-log :: modules
	@source ${MAKEINCLUDES}/names.sh \
	 && installext=$$( make --no-print-directory installext \
	        PACKAGEVERSION=${PACKAGEVERSION} MODE=${MODE} \
	        INSTALLEXT=${INSTALLEXT} INSTALLVARIANT=${INSTALLVARIANT} \
	        ) \
	 && requirenonzero installext \
	 && export srcdir=$$( make --no-print-directory srcdir \
	            PACKAGE=${PACKAGE} PACKAGEVERSION=${PACKAGEVERSION} \
	            PACKAGEBASENAME=${PACKAGEBASENAME} \
	            DOWNLOADPATH=${DOWNLOADPATH} SRCPATH=${SRCPATH} \
	            ) \
	 && echo $${srcdir}/config.log
