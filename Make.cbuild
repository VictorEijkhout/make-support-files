# -*- makefile -*-
################################################################
####
#### Make.install : make & install rules for cmake based packages
####
################################################################

info ::
	@echo "================ cmake compile and install:"
	@echo "make build"
	@echo "    [ SUDO= blank or sudo ]"
	@echo "    [ JCOUNT=123 (default ${JCOUNT}) ]"
.PHONY: build install
JCOUNT = 2
build ::
	@echo && echo "CMake build of <<${PACKAGE}>> started: $$( date )" && echo 
	@source ${MAKEINCLUDES}/names.sh \
	 && export scriptdir=$$(pwd) \
	 && installext=$$( make --no-print-directory installext \
	        PACKAGEVERSION=${PACKAGEVERSION} MODE=${MODE} \
	        INSTALLEXT=${INSTALLEXT} INSTALLVARIANT=${INSTALLVARIANT} \
	        ) \
	 && requirenonzero installext \
	 && lognames $$installext \
	 && requirenonzero installlog \
	 && export srcdir=$$( make --no-print-directory srcdir \
	        PACKAGE=${PACKAGE} PACKAGEVERSION=${PACKAGEVERSION} \
	        PACKAGEBASENAME=${PACKAGEBASENAME} \
	        DOWNLOADPATH=${DOWNLOADPATH} SRCPATH=${SRCPATH} \
	        ) \
	 && export builddir=$$( make --no-print-directory builddir \
	        ) \
	 && export prefixdir=$$( make --no-print-directory prefixdir \
	        PACKAGE=${PACKAGE} PACKAGEVERSION=${PACKAGEVERSION} \
	        PACKAGEBASENAME=${PACKAGEBASENAME} MODE=${MODE} \
	        INSTALLPATH=${INSTALLPATH} INSTALLROOT=${INSTALLROOT} \
	        INSTALLEXT=${INSTALLEXT} INSTALLVARIANT=${INSTALLVARIANT} \
	        ) \
	 && ( \
	    echo ">>>>>>>>>>>>>>>> Package <<${PACKAGE}>> start cmake build" \
	     && reportnonzero builddir \
	     && reportnonzero prefixdir \
	     \
	     && cd $$builddir \
	     && echo "Building in $${builddir} with ${JCOUNT} threads" \
	     && if [ ! -z "${CPTOSOURCE}" ] ; then \
	            sourcetgt=${CPTOSOURCE} && sourcetgt=$${sourcetgt%%,*} \
	             && sourcesrc=${CPTOSOURCE} && sourcesrc=$${sourcesrc##*,} \
	             && cmdline="cp $$sourcesrc $${srcdir}/$${sourcetgt}" \
	             && if [ "${ECHO}" = "1" ] ; then \
	                  echo "Copying to source: <<$$cmdline>>" ; fi \
	             && eval $$cmdline \
	        ; fi \
	     && retcode=0 \
	     && make --no-print-directory V=1 VERBOSE=1 -j ${JCOUNT} \
	        || retcode=$$? \
	     && if [ $${retcode} -ne 0 ] ; then \
	          echo "ERROR make in $${builddir} failed with code $${retcode}" && exit 1 \
	        ; fi \
	     && if [ ! -z "${EXTRABUILDTARGETS}" ] ; then \
	          make --no-print-directory V=1 VERBOSE=1 -j ${JCOUNT} ${EXTRABUILDTARGETS} \
	        ; fi \
	     && echo "................................ VLE done build" \
	     && echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> VLE start install" \
	     && echo "Installing in $${prefixdir}" \
	     && if [ -z "${NOINSTALL}" ] ; then \
	            ${SUDO} make --no-print-directory install \
	        ; fi \
	     && if [ ! -z "${POSTINSTALLinLIB}" ] ; then  \
	          libdir=$$( make --no-print-directory -f $${scriptdir}/Makefile \
	                    findlibdir PREFIXDIR=$${prefixdir} ) \
	           && ( cd $${prefixdir}/$${libdir} && eval ${SUDO} ${POSTINSTALLinLIB} ) \
	        ; fi \
	     && if [ ! -z "${LINKLIB64toLIB}" ] ; then \
	          libdir=$$( make --no-print-directory -f $${scriptdir}/Makefile \
	                    findlibdir PREFIXDIR=$${prefixdir} ) \
	           && if [ "$${libdir}" = "lib64" ] ; then \
	                ( cd $$prefixdir && ${SUDO} rm -rf lib && ${SUDO} ln -s lib64 lib ) \
	              ; fi \
	        ; fi \
	     && if [ ! -z "${CPTOINSTALLDIR}" ] ; then \
	            echo " .. additional copies: ${CPTOINSTALLDIR}" \
	             && ( cd $$srcdir && cp -r ${CPTOINSTALLDIR} $$prefixdir ) ; fi \
	     && echo "................................ VLE done install" \
	    ) 2>&1 | tee $$installlog \
	 && ( if [ -z "${NOMODULE}" ] ; then \
	        echo ">>>>>>>>>>>>>>>> VLE generating module file" \
	         && make FAMILY=${FAMILY} --no-print-directory module \
	       ; fi \
	       && echo && echo "CMake installation finished at $$( date ) " \
	       && echo " .. in: $$prefixdir" && echo \
	) 2>&1 | tee -a $$installlog \

.PHONY: findlibdir
#
# return lib or lib64 depending on what's there
#
findlibdir :
	@if [ -z "${PREFIXDIR}" ] ; then \
	    echo "Needs non-null PREFIXDIR variable" ; fi \
	 && if [ -d "${PREFIXDIR}/lib64" ] ; then \
	      echo "lib64" \
	    ; elif [ -d "${PREFIXDIR}/lib" ] ; then \
	      echo "lib" \
	    ; else echo "ERROR can not find lib or lib64" \
	    ; fi

include ${MAKEINCLUDES}/Make.vars
include ${MAKEINCLUDES}/Make.public
